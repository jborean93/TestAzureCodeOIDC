name: Test Azure OIDC
on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permissions is mandatory for Azure OIDC authentication
      id-token: write
      contents: read

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: OIDC Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Build module - Publish
      shell: pwsh
      run: |
        Import-Module ./OpenAuthenticode

        $keyParams = @{
            VaultName = '${{ secrets.AZURE_VAULT_NAME }}'
            Certificate = '${{ secrets.AZURE_VAULT_CERT_NAME }}'
        }
        $key = Get-OpenAuthenticodeAzKey @keyParams

        $moduleDir = Join-Path $pwd.Path 'TestAzureCodeOIDC'

        $signParams = @{
            Key = $key
            TimeStampServer = 'http://timestamp.digicert.com'
            Verbose = $true
        }
        Get-ChildItem $moduleDir | Set-OpenAuthenticodeSignature @signParams

        $publishLocation = Join-Path $pwd.Path 'output'
        $null = New-Item $publishLocation -ItemType Directory

        $repoParams = @{
            Name = 'LocalRepo'
            SourceLocation = $publishLocation
            PublishLocation = $publishLocation
            InstallationPolicy = 'Trusted'
        }
        Register-PSRepository @repoParams
        try {
            Publish-Module -Path $moduleDir -Repository $repoParams.Name
        }
        finally {
            Unregister-PSRepository -Name $repoParams.Name
        }

    - name: Capture Built module
      uses: actions/upload-artifact@v3
      with:
        name: PSModule
        path: output/*.nupkg

    - name: purpose fail
      shell: pwsh
      run: |
        throw "abc"
